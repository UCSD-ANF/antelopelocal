antelope	&env(ANTELOPE)
capabilities	&Arr{
    matlab	&Arr{
        Description	Antelope Matlab Interface and Matlab-based Antelope tools
        Detail	&Literal{
			The 'matlab' capability provides linkage to the Matlab interpreter on the
			local machine. These is used within Antelope-contrib primarily for compilation
			of the Antelope Toolbox for Matlab. 
		}
        enable	&Arr{
            Darwin	no
            Linux	no
            SunOS	1
        }
        required_macros	&Tbl{
            MATLAB
        }
        tests	&Tbl{
            &Literal{
			$failure_msg = "Couldn't find Matlab directory '$MATLAB' " .
				       "implied by currently configured value of MATLAB macro";
			$success_msg = "Matlab directory '$MATLAB' exists";
			-d "$MATLAB"
			}
            &Literal{
			$failure_msg = "Couldn't find Matlab launch script '$MATLAB/bin/matlab' " .
				       "implied by currently configured value of MATLAB macro";
			$success_msg = "Matlab launch script '$MATLAB/bin/matlab' is executable";
			-x "$MATLAB/bin/matlab"
			}
            &Literal{
			$failure_msg = "MATLAB environment variable is defined as '$ENV{MATLAB}' which " .
				       "doesn't match MATLAB macro setting of '$MATLAB'";
			$success_msg = "MATLAB environment variable is not defined or matches macro setting";
			! defined( $ENV{'MATLAB'} ) || $ENV{'MATLAB'} eq "$MATLAB"
			}
        }
    }
    perl_DBI	&Arr{
        Description	Perl DBI database-connectivity CPAN module
        Detail	&Literal{
			The 'perl_DBI' capability supports usage of the Perl-CPAN 'DBI' Perl 
			module available from http://www.cpan.org.
			Depending on your local system configuration and administration policies, 
			you may be able to install this package by typing 
			"perl -MCPAN -e 'install DBI'" on the command-line, making sure to use 
			the Antelope perl interpreter when doing so. 
		}
        enable	&Arr{
            Darwin	no
            Linux	no
            SunOS	1
        }
        required_macros	&Tbl{
        }
        tests	&Tbl{
            &Literal{
			$failure_msg = "Perl 'DBI' module is not available";
			$success_msg = "Perl 'DBI' module is available";
			eval { use DBI; 1; }
			}
        }
    }
    php	&Arr{
        Description	Antelope PHP Interface and PHP-based Antelope tools
        Detail	&Literal{
			The 'php' capability provides linkage to the PHP interpreter on the
			local machine (if there are several PHP interpreters, this capability 
			identifies which one has been chosen to be used with Antelope). This 
			capability is used within Antelope-contrib primarily for compilation of 
			the Antelope PHP interface, though it also controls whether other 
			PHP-dependent Antelope-contrib tools get installed (e.g. webdlmon(3H) 
			and webdbe(3H)). 
		}
        enable	&Arr{
            Darwin	no
            Linux	no
            SunOS	1
        }
        required_macros	&Tbl{
            PHP_INC
            PHP_EXECUTABLE
        }
        tests	&Tbl{
            &Literal{
			$failure_msg = "Couldn't find header-file directory '$PHP_INC/Zend' " . 
				       "implied by currently configured value of PHP_INC macro";
			$success_msg = "Found header-file directory '$PHP_INC'";
			-d "$PHP_INC/Zend"
			}
            &Literal{
			$failure_msg = "File '$PHP_EXECUTABLE' specified by the " .
				       "PHP_EXECUTABLE macro is not present or not executable'";
			$success_msg = "Found php executable '$PHP_EXECUTABLE'";
			-f "$PHP_EXECUTABLE" && -x "$PHP_EXECUTABLE"
			}
        }
    }
    python	&Arr{
        Description	Antelope Python Interface and Python-based Antelope tools
        Detail	&Literal{
			The 'python' capability provides linkage to the Python interpreter on the
			local machine (if there are several Python interpreters, this capability 
			identifies which one has been chosen to be used with Antelope). This capability 
			is used within Antelope-contrib primarily for compilation of the Antelope Python 
			interface, though it also controls whether other Python-dependent Antelope-contrib 
			tools get installed (e.g. dbwfserver(1) and orbtopo(1)). 
		}
        enable	&Arr{
            Darwin	no
            Linux	no
            SunOS	1
        }
        required_macros	&Tbl{
            PYTHONINCLUDE
            PYTHON_EXECUTABLE
        }
        tests	&Tbl{
            &Literal{
			$failure_msg = "Couldn't find header-file '$PYTHONINCLUDE/Python.h' " .
				       "implied by currently configured value of PYTHONINCLUDE " .
				       "macro";
			$success_msg = "Found header file '$PYTHONINCLUDE/Python.h'";
			-e "$PYTHONINCLUDE/Python.h"
			}
            &Literal{
			$failure_msg = "File '$PYTHON_EXECUTABLE' specified by the " .
				       "PYTHON_EXECUTABLE macro is not present or not executable'";
			$success_msg = "Found python executable '$PYTHON_EXECUTABLE'";
			-f "$PYTHON_EXECUTABLE" && -x "$PYTHON_EXECUTABLE"
			}
        }
    }
    python_amqplib	&Arr{
        Description	AMQP interface library for Python
        Detail	&Literal{
			The 'python_amqplib' capability supports usage of the 'py-amqplib' Python 
			client library available from http://code.google.com/p/py-amqplib/.
			Depending on your local system configuration and administration policies, 
			you may be able to install this package by typing "easy_install amqplib" on 
			the command-line. 
		}
        enable	&Arr{
            Darwin	no
            Linux	no
            SunOS	0
        }
        required_macros	&Tbl{
        }
        tests	&Tbl{
            &Literal{
			$failure_msg = "Python 'amqplib' is not available within " .
				       "Python interpreter '$PYTHON_EXECUTABLE'";
			$success_msg = "Python 'amqplib' is available within '$PYTHON_EXECUTABLE'";
			-f "$PYTHON_EXECUTABLE" && -x "$PYTHON_EXECUTABLE" && system( "$PYTHON_EXECUTABLE -c 'import amqplib'" ) == 0
			}
        }
    }
    python_matplotlib	&Arr{
        Description	Matlab-emulation library for Python
        Detail	&Literal{
			The 'python_matplotlib' capability supports usage of the 'matplotlib' Python 
			client library available from http://matplotlib.sourceforge.net/.
			Depending on your local system configuration and administration policies, 
			you may be able to install this package by typing "easy_install matplotlib" on 
			the command-line. 
		}
        enable	&Arr{
            Darwin	no
            Linux	no
            SunOS	0
        }
        required_macros	&Tbl{
        }
        tests	&Tbl{
            &Literal{
			$failure_msg = "Python 'matplotlib' is not available within " .
				       "Python interpreter '$PYTHON_EXECUTABLE'";
			$success_msg = "Python 'matplotlib' is available within '$PYTHON_EXECUTABLE'";
			-f "$PYTHON_EXECUTABLE" && -x "$PYTHON_EXECUTABLE" && system( "$PYTHON_EXECUTABLE -c 'import matplotlib'" ) == 0
			}
        }
    }
    python_pygraphviz	&Arr{
        Description	Graphviz graph-analysis library for Python
        Detail	&Literal{
			The 'python_pygraphviz' capability supports usage of the 'pygraphviz' Python 
			client library available from http://networkx.lanl.gov/pygraphviz.
			Depending on your local system configuration and administration policies, 
			you may be able to install this package by typing "easy_install pygraphviz" on 
			the command-line. 
		}
        enable	&Arr{
            Darwin	no
            Linux	no
            SunOS	0
        }
        required_macros	&Tbl{
        }
        tests	&Tbl{
            &Literal{
			$failure_msg = "Python 'pygraphviz' is not available within " .
				       "Python interpreter '$PYTHON_EXECUTABLE'";
			$success_msg = "Python 'pygraphviz' is available within '$PYTHON_EXECUTABLE'";
			-f "$PYTHON_EXECUTABLE" && -x "$PYTHON_EXECUTABLE" && system( "$PYTHON_EXECUTABLE -c 'import pygraphviz'" ) == 0
			}
        }
    }
    xmotif	&Arr{
        Description	X/Motif Graphics toolkit links
        Detail	&Literal{
			The 'xmotif' capability provides linkage to the X/Motif include files and 
			link libraries on the local machine. These are used within Antelope-contrib
			for the dbxcor(1) application as well as supporting libraries such as
			libseisw. 
		}
        enable	&Arr{
            Darwin	no
            Linux	yes
            SunOS	1
        }
        required_macros	&Tbl{
            XMOTIFINCLUDE
            XMOTIFLIB
        }
        tests	&Tbl{
            &Literal{
			$failure_msg = "Couldn't find header-file directory '$XMOTIFINCLUDE/Xm' " . 
				       "implied by currently configured value of XMOTIFINCLUDE macro";
			$success_msg = "Found header-file directory for X-Motif";
			-d "$XMOTIFINCLUDE/Xm"
			}
            &Literal{
			$failure_msg = "Couldn't find library-file directory '$XMOTIFLIB' " . 
				       "implied by currently configured value of XMOTIFLIB macro";
			$success_msg = "Found library-file directory for X-motif";
			-d "$XMOTIFLIB"
			}
        }
    }
}
dest	&antelope/local/include
extra_rules	&Literal{
.SUFFIXES: .SUFFIXES .py .pyc .xpy .xphp .wwwphp

% : %.xpy $(ANTELOPE)/local/data/templates/xpy
	$(RM) $@
	cat $(ANTELOPE)/local/data/templates/xpy $< > $@
	chmod a+x $@

% : %.xphp $(ANTELOPE)/local/data/templates/xphp
	$(RM) $@
	cat $(ANTELOPE)/local/data/templates/xphp $< > $@
	chmod a+x $@

.wwwphp.php : $(ANTELOPE)/local/data/templates/wwwphp
	$(RM) $@
	cat $(ANTELOPE)/local/data/templates/wwwphp $*.wwwphp > $@

.py.pyc :
	$(RM) $@
	$(PYTHON_EXECUTABLE) -c 'import py_compile; py_compile.compile("$<")'

install :: 
	@mkdir -p $(ANTELOPE)/local/bin
	@mkdir -p $(ANTELOPE)/local/man
	@mkdir -p $(ANTELOPE)/local/lib
	@mkdir -p $(ANTELOPE)/local/static
	@mkdir -p $(ANTELOPE)/local/data
	@mkdir -p $(ANTELOPE)/local/include
}
header	&Literal{
# DO NOT MODIFY -- Automatically generated file -- DO NOT MODIFY
#
# This file has been automatically generated by the localmake_config(1) program.
# Run localmake_config(1) to regenerate if necessary.
# See the localmake_config(1)  man page for further details. 
}
macros	&Arr{
    MATLAB	&Arr{
        Darwin	
        Description	Top-level directory of Matlab installation
        Detail	&Literal{
			The MATLAB macro specifies the top-level directory
			of the Matlab installation on the local machine. 
			On Solaris or Linux, this may be something like 
			'/usr/local/matlab'. On Mac, it may be something
			like '/Applications/MATLAB_R2009b.app'.
		}
        Linux	
        SunOS	/opt/matlab/matlab-2006b
    }
    PHP_EXECUTABLE	&Arr{
        Darwin	
        Description	Absolute pathname of PHP interpreter
        Detail	&Literal{
		     The PHP_EXECUTABLE macro specifies the absolute 
		     pathname of the PHP interpreter to be used for
		     the Antelope PHP interface. The PHP_INC
		     and PHP_EXECUTABLE macros must be set consistent 
		     with each other, i.e. referring to PHP header files 
		     and PHP executable that belong together. An example 
		     value for the PHP_EXECUTABLE macro might be '/usr/bin/php', although
		     this of course depends on local system configuration.
		}
        Linux	
        SunOS	/opt/csw/php5/bin/php
    }
    PHP_INC	&Arr{
        Darwin	
        Description	Location of PHP header files
        Detail	&Literal{
		     The PHP_INC macro specifies the location of 
		     the include files (header files) for the PHP 
		     interpreter to be used with Antelope (and against which 
		     the Antelope interface to PHP will compile locally). 
		     The directory specified by this macro should contain, 
		     among other things, the sub-directories Zend/, TSRM/, and include/ 
		     (at least for versions of PHP current at the time of this writing). 
		     For the Antelope PHP toolbox to work correctly, the include files 
		     specified by the PHP_INC macro must be consistent 
		     with the PHP executable specified by the 
		     PHP_EXECUTABLE macro. An example value for the 
		     PYTHONINCLUDE macro might be '/usr/include/php', although this 
		     of course depends on local system configuration.
		}
        Linux	
        SunOS	/opt/csw/php5/include/php
    }
    PYTHONINCLUDE	&Arr{
        Darwin	
        Description	Location of Python header files
        Detail	&Literal{
		     The PYTHONINCLUDE macro specifies the location of 
		     the include files (header files) for the Python 
		     interpreter to be used with Antelope (and against which 
		     the Python interface to Antelope will compile locally). 
		     The directory specified by this macro should contain, 
		     among other things, the file Python.h. For the Antelope 
		     Python toolbox to work correctly, the include files 
		     specified by the PYTHONINCLUDE macro must be consistent 
		     with the Python executable specified by the 
		     PYTHON_EXECUTABLE macro. An example value for the 
		     PYTHONINCLUDE macro might be '/usr/include/python2.6'
		     on a Maciontosh computer, or perhaps '/sw/include/python2.6' 
		     if the 'Fink' python interpreter is being used. 
		}
        Linux	
        SunOS	/opt/csw/include/python2.6
    }
    PYTHON_EXECUTABLE	&Arr{
        Darwin	
        Description	Absolute pathname of Python interpreter
        Detail	&Literal{
		     The PYTHON_EXECUTABLE macro specifies the absolute 
		     pathname of the Python interpreter to be used for
		     the Antelope python interface. The PYTHONINCLUDE
		     and PYTHON_EXECUTABLE macros must be set consistent 
		     with each other, i.e. referring to python header files 
		     and python executable that belong together. An example 
		     value for the PYTHON_EXECUTABLE macro might be '/usr/bin/python'
		     on a Macintosh computer, or perhaps '/sw/bin/python' if the 
		     'Fink' python interpreter is being used. 
		}
        Linux	
        SunOS	/opt/csw/bin/python
    }
    XMOTIFINCLUDE	&Arr{
        Darwin	
        Description	Location of X-Motif header files
        Detail	&Literal{
			The XMOTIFINCLUDE macro specifies the location 
			of the include files (header files) for the 
			X/Motif graphics toolkit. The directory specified 
			by this macro should contain a subdirectory called Xm/ 
			which has the actual toolkit header files. This macro must 
			be set to a value which is consistent with the location 
			given in the XMOTIFLIB macro, i.e. the header files and the 
			library files pointed to by these two macros must 
			correspond to each other. An example value for XMOTIFINCLUDE
			might be '/usr/openwin/include' on Solaris; sometimes 
			'/usr/X11R6/include' on Linux; and perhaps '/sw/include' on 
			Macintosh, if the 'Fink' distribution of X/Motif has been 
			installed there.  
		}
        Linux	/usr/X11R6/include
        SunOS	/usr/include
    }
    XMOTIFLIB	&Arr{
        Darwin	
        Description	Location of X-Motif link libraries
        Detail	&Literal{
			The XMOTIFLIB macro specifies the location 
			of the link libraries for the X/Motif graphics toolkit. 
			This macro must be set to a value which is consistent with
			the location given in the XMOTIFINCLUDE macro, i.e. the header
			files and the library files pointed to by these two macros must 
			correspond to each other. An example value for XMOTIFLIB
			might be '/usr/openwin/lib' on Solaris; sometimes 
			'/usr/X11R6/lib' on Linux; and perhaps '/sw/lib' on 
			Macintosh, if the 'Fink' distribution of X/Motif has been 
			installed there.  
		}
        Linux	/usr/X11R6/lib
        SunOS	/usr/openwin/lib
    }
}
output_file	antelopemake.local
pf_revision_time	1303425395
